# Pre-commit hooks configuration for codn
# Ensures code quality and consistency before commits

repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.7.4
    hooks:
      # Linting
      - id: ruff
        name: ruff lint
        description: Run ruff linter
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]

      # Formatting
      - id: ruff-format
        name: ruff format
        description: Run ruff formatter
        types: [python]

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      # File quality checks
      - id: trailing-whitespace
        name: trim trailing whitespace

      - id: end-of-file-fixer
        name: fix end of files

      - id: check-yaml
        name: check yaml syntax

      - id: check-toml
        name: check toml syntax

      - id: check-json
        name: check json syntax

      # Python specific checks
      - id: check-ast
        name: check python ast
        description: Check whether files parse as valid python

      - id: check-merge-conflict
        name: check for merge conflicts

      - id: check-case-conflict
        name: check for case conflicts

      - id: debug-statements
        name: debug statements (Python)
        description: Check for debugger imports and py37+ breakpoint() calls

      # File size and encoding
      - id: check-added-large-files
        name: check for added large files
        args: ["--maxkb=1000"]

      - id: mixed-line-ending
        name: mixed line ending

      - id: check-executables-have-shebangs
        name: check that executables have shebangs

  # MyPy type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        name: mypy type check
        additional_dependencies:
          - types-requests
          - types-setuptools
        args: [--ignore-missing-imports, --show-error-codes]
        exclude: ^(tests/|docs/examples/)

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        name: bandit security check
        args: [-r, -x, tests/]
        exclude: ^tests/

  # Docstring formatting (disabled due to compatibility issues)
  # - repo: https://github.com/PyCQA/docformatter
  #   rev: v1.7.5
  #   hooks:
  #     - id: docformatter
  #       name: docformatter
  #       args: [--in-place, --wrap-summaries=88, --wrap-descriptions=88]

# Pre-commit configuration
default_language_version:
  python: python3

# Global settings
fail_fast: false
minimum_pre_commit_version: "3.0.0"

# CI specific settings
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
