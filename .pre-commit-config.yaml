# Pre-commit hooks configuration for codn
# Ensures code quality and consistency before commits

repos:
  # Ruff - Fast Python linter and formatter (using local installation)
  - repo: local
    hooks:
      - id: ruff
        name: ruff lint
        description: Run ruff linter
        entry: ruff check codn/
        language: system
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]

      - id: ruff-format
        name: ruff format
        description: Run ruff formatter
        entry: ruff format codn/
        language: system
        types: [python]

      - id: mypy
        name: mypy
        entry: mypy
        language: system
        types: [python]
        args:
          [
            --explicit-package-bases,
            --ignore-missing-imports,
            --show-error-codes,
          ]

      - id: bandit
        name: bandit
        entry: bandit
        language: system
        types: [python]

      - id: docformatter
        name: docformatter
        entry: docformatter
        language: system
        types: [python]
        args: [--in-place, --wrap-summaries=88, --wrap-descriptions=88]

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: trim trailing whitespace

      - id: end-of-file-fixer
        name: fix end of files

      - id: check-yaml
        name: check yaml syntax

      - id: check-toml
        name: check toml syntax

      - id: check-json
        name: check json syntax

      # Python specific checks
      - id: check-ast
        name: check python ast

      - id: check-merge-conflict
        name: merge conflicts

      - id: check-case-conflict
        name: case conflicts

      - id: debug-statements
        name: debug statements

      - id: check-added-large-files
        name: large files check
        args: ["--maxkb=1000"]

      - id: mixed-line-ending
        name: mixed line endings

      - id: check-executables-have-shebangs
        name: shebang check

# Pre-commit configuration
default_language_version:
  python: python3

# Global settings
fail_fast: false
minimum_pre_commit_version: "3.0.0"

# CI specific settings
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
