# Pre-commit hooks configuration for codn
# Ensures code quality and consistency before commits

repos:
  # Ruff - Fast Python linter and formatter (using local installation)
  - repo: local
    hooks:
      # Linting
      - id: ruff
        name: ruff lint
        description: Run ruff linter
        entry: ruff check codn/
        language: system
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]
        pass_filenames: false

      # Formatting
      - id: ruff-format
        name: ruff format
        description: Run ruff formatter
        entry: ruff format codn/
        language: system
        types: [python]
        pass_filenames: false

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      # File quality checks
      - id: trailing-whitespace
        name: trim trailing whitespace

      - id: end-of-file-fixer
        name: fix end of files

      - id: check-yaml
        name: check yaml syntax

      - id: check-toml
        name: check toml syntax

      - id: check-json
        name: check json syntax

      # Python specific checks
      - id: check-ast
        name: check python ast
        description: Check whether files parse as valid python

      - id: check-merge-conflict
        name: check for merge conflicts

      - id: check-case-conflict
        name: check for case conflicts

      - id: debug-statements
        name: debug statements (Python)
        description: Check for debugger imports and py37+ breakpoint() calls

      # File size and encoding
      - id: check-added-large-files
        name: check for added large files
        args: ["--maxkb=1000"]

      - id: mixed-line-ending
        name: mixed line ending

      - id: check-executables-have-shebangs
        name: check that executables have shebangs

  # All tools using local installation to avoid GitHub downloads
  - repo: local
    hooks:
      # MyPy type checking
      - id: mypy
        name: mypy type check
        entry: python -m mypy
        language: system
        types: [python]
        args: [--ignore-missing-imports, --show-error-codes, codn/]
        pass_filenames: false
        exclude: ^(tests/|docs/examples/)

      # Security checks with bandit
      - id: bandit
        name: bandit security check
        entry: python -m bandit
        language: system
        types: [python]
        args: [-r, codn/]
        pass_filenames: false
        exclude: ^tests/

      # Docstring formatting
      - id: docformatter
        name: docformatter
        entry: python -m docformatter
        language: system
        types: [python]
        args: [--in-place, --wrap-summaries=88, --wrap-descriptions=88]
        files: ^codn/.*\.py$
        pass_filenames: true

# Pre-commit configuration
default_language_version:
  python: python3

# Global settings
fail_fast: false
minimum_pre_commit_version: "3.0.0"

# CI specific settings
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
