[tox]
envlist = py{37,38,39,310,311,312}, lint, coverage, docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps =
    pytest>=7.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0
    pytest-mock>=3.10
    pytest-timeout>=2.1
    pytest-clarity>=1.0
extras = test
commands =
    pytest {posargs:tests}

[testenv:py37]
deps = {[testenv]deps}
commands = pytest tests -m "not slow" {posargs}

[testenv:py38]
deps = {[testenv]deps}
commands = pytest tests {posargs}

[testenv:py39]
deps = {[testenv]deps}
commands = pytest tests {posargs}

[testenv:py310]
deps = {[testenv]deps}
commands = pytest tests {posargs}

[testenv:py311]
deps = {[testenv]deps}
commands = pytest tests {posargs}

[testenv:py312]
deps = {[testenv]deps}
commands = pytest tests {posargs}

[testenv:lint]
deps =
    ruff
    mypy
    black
skip_install = false
commands =
    ruff check .
    mypy codn
    black --check --diff .

[testenv:format]
deps =
    black
    ruff
skip_install = false
commands =
    black .
    ruff check --fix --select I .

[testenv:coverage]
deps = {[testenv]deps}
commands =
    pytest --cov=codn --cov-report=term-missing --cov-report=html --cov-report=xml --cov-fail-under=80

[testenv:fast]
deps = {[testenv]deps}
commands = pytest -m "not slow" --maxfail=5 -q

[testenv:integration]
deps = {[testenv]deps}
commands = pytest -m integration -v

[testenv:unit]
deps = {[testenv]deps}
commands = pytest tests/unit -v

[testenv:parallel]
deps =
    {[testenv]deps}
    pytest-xdist>=3.0
commands = pytest -n auto

[testenv:docs]
deps =
    sphinx
    sphinx-rtd-theme
    myst-parser
changedir = docs
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:security]
deps =
    safety
    bandit
commands =
    safety check
    bandit -r codn

[testenv:type]
deps =
    mypy
    types-requests
commands = mypy codn tests

[testenv:benchmark]
deps =
    {[testenv]deps}
    pytest-benchmark
commands = pytest tests -k benchmark --benchmark-only

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv

[coverage:run]
source = codn
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */site-packages/*
    */venv/*
    */.venv/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

[coverage:html]
directory = htmlcov
